{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/even/source/js/back2top.js","path":"js/back2top.js","modified":0},{"_id":"themes/even/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":0},{"_id":"themes/even/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":0},{"_id":"themes/even/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":0},{"_id":"themes/even/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":0},{"_id":"themes/even/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":0},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","path":"fonts/chancery/apple-chancery-webfont.woff2","modified":0},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","path":"fonts/chancery/apple-chancery-webfont.woff","modified":0},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","path":"fonts/chancery/apple-chancery-webfont.ttf","modified":0},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","path":"fonts/chancery/apple-chancery-webfont.svg","modified":0},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","path":"fonts/chancery/apple-chancery-webfont.eot","modified":0},{"_id":"themes/even/source/favicon.png","path":"favicon.png","modified":0},{"_id":"themes/even/source/css/style.css","path":"css/style.css","modified":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0}],"Cache":[{"_id":"source/about/index.md","shasum":"7c0621ba3688ac395eb388f1a314ee9ab81d1b1d","modified":1471700856000},{"_id":"source/tags/index.md","shasum":"4cf47e2b8776037d0efeee5e561670f2dd0f5acc","modified":1468646040000},{"_id":"source/favicon.png","shasum":"ef238acf711745e3a5954131efd1e3891102eda7","modified":1463926454000},{"_id":"themes/even/LICENSE","shasum":"65da563ec8598aecdbf3f49968b85a117543ac54","modified":1468242172000},{"_id":"themes/even/README.md","shasum":"8a4513b0aeee8502dcf9e6196e3ac0cecd8bb8f5","modified":1468242172000},{"_id":"themes/even/_config.yml","shasum":"9970ca09a98b0a763fd97a908f12298b92b95db5","modified":1471702817000},{"_id":"themes/even/doc/doc_en.md","shasum":"f4d0fc5f090b35dcc105f838f21d7dd6a4a76451","modified":1468242172000},{"_id":"themes/even/doc/doc_zh.md","shasum":"0110625c0049e8b08caf83e79a0125ed11c7ad5c","modified":1468242172000},{"_id":"themes/even/gulpfile.js","shasum":"20747491ffcb79b530452d3e64bd50ca2d79fa3a","modified":1468242172000},{"_id":"themes/even/languages/en.yml","shasum":"11c0bb80fa556b110288c3aea4ffdc0b25e52832","modified":1468697320000},{"_id":"themes/even/languages/zh-cn.yml","shasum":"df8ad2ec1e0389186ac2c51a63a096443b258979","modified":1471702777000},{"_id":"themes/even/layout/about.jade","shasum":"afcb22356b081fa93bb5f16486a05d2307e1025f","modified":1468242172000},{"_id":"themes/even/layout/archive.jade","shasum":"491dc2d2dcedcbe87e8eafa37714e5b0cb6b2966","modified":1468242172000},{"_id":"themes/even/layout/index.jade","shasum":"bb47055acff9f0f78e3da3b1b8597658523cc990","modified":1468242172000},{"_id":"themes/even/layout/mixins/analytics.jade","shasum":"e4650d862d74e7e60cb6532b570fe1c59d2e6a94","modified":1468242172000},{"_id":"themes/even/layout/mixins/comment.jade","shasum":"5cbab04f2580a4c8663a69ec92567287a98d60e8","modified":1468242172000},{"_id":"themes/even/layout/mixins/container.jade","shasum":"b768e314ecac948696834eefb2c8812c3775afbe","modified":1468242172000},{"_id":"themes/even/layout/mixins/paginator.jade","shasum":"e46f7ec3ca4b8fee7e920bcd1f0b7eed3d040abb","modified":1468242172000},{"_id":"themes/even/layout/mixins/tags.jade","shasum":"f3a20ac226ba97bdd4be2c26a716e76b0ac2c3bf","modified":1468242172000},{"_id":"themes/even/layout/partial/footer.jade","shasum":"64a6423892e970aa59521ca8cacacfa4b9b7ef08","modified":1468659436000},{"_id":"themes/even/layout/partial/head.jade","shasum":"0cee0684f6fbd14dc8481c568de00a08d869440e","modified":1468242172000},{"_id":"themes/even/layout/partial/layout.jade","shasum":"bb483eba219dceb6170b542e1080a7cef9c167af","modified":1468242172000},{"_id":"themes/even/layout/partial/script.jade","shasum":"97d96bd450d593b13e902e5427dafcda63ce789b","modified":1468242172000},{"_id":"themes/even/layout/post.jade","shasum":"0d5d7f0e6be0e80d9c1ce1783c09a6ac7d01ecbd","modified":1468242172000},{"_id":"themes/even/layout/tags.jade","shasum":"0a28e85a89daaf5edf82c374402a8e15340c4cda","modified":1468242172000},{"_id":"themes/even/package.json","shasum":"1fd4a07bd969ab9bec041b70a85521c460fa1101","modified":1468242172000},{"_id":"themes/even/source/css/style.css","shasum":"27ad29093ed715396b6e6150425247bc6ac5b02f","modified":1468242172000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","shasum":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1468242172000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","shasum":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1468242172000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","shasum":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1468242172000},{"_id":"themes/even/source/fonts/iconfont/iconfont.css","shasum":"e88809b08df63794c3a433fee326bd605719ee0e","modified":1468242172000},{"_id":"themes/even/source/fonts/iconfont/iconfont.eot","shasum":"b8b1482337cea6995238e54a1551a3c46d57fb68","modified":1468242172000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","shasum":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1468242172000},{"_id":"themes/even/source/fonts/iconfont/iconfont.svg","shasum":"f56f35c911dbfbb123d13c6e52bf6eb19f1b46fc","modified":1468242172000},{"_id":"themes/even/source/fonts/iconfont/iconfont.ttf","shasum":"d12124f70bdff7fd2b17baf0e23a621cbf03dc8e","modified":1468242172000},{"_id":"themes/even/source/fonts/iconfont/iconfont.woff","shasum":"6643bcb7dc8d516c457d5d159072ad6a704f8e28","modified":1468242172000},{"_id":"themes/even/source/js/back2top.js","shasum":"73bb560b8ef0b5fc41b520bae2837eabbf901e88","modified":1468242172000},{"_id":"themes/even/style/_global.scss","shasum":"cc8d92b57340bf41cb0dce18436431585b752c63","modified":1468242172000},{"_id":"themes/even/style/_normalize.scss","shasum":"87d5cd2a60780e1796dc27deeb5337a9d48e39a8","modified":1468242172000},{"_id":"themes/even/style/partial/_archive.scss","shasum":"dc699bcdf5256d411220d0417a0169d2dfa829e9","modified":1468242172000},{"_id":"themes/even/style/partial/_code.scss","shasum":"4e629b6b2c04e6f0c8c105910f821fee0c34e8c9","modified":1468242172000},{"_id":"themes/even/style/partial/_footer.scss","shasum":"81b68e18a6bbfa95f7eb1688180ff10412177642","modified":1468242172000},{"_id":"themes/even/style/partial/_header.scss","shasum":"0071f09a703ecf805378b8ef529cec74bc53bce1","modified":1468242172000},{"_id":"themes/even/style/partial/_home.scss","shasum":"ef2e44695632aaa53b9ac599127297fe7bf602ca","modified":1468242172000},{"_id":"themes/even/style/partial/_media.scss","shasum":"924e1426af1334dbcccbd8eae2a8667e6de48064","modified":1468242172000},{"_id":"themes/even/style/partial/_paginator.scss","shasum":"75e6bd9adf4cc361c04b49caa6856e65a443c840","modified":1468242172000},{"_id":"themes/even/style/partial/_post.scss","shasum":"aa03bd6c3a712c533a950a177732a1ecaa4abf25","modified":1468674356000},{"_id":"themes/even/style/partial/_tags.scss","shasum":"ece2b168649d68b8a42871555b2507c3f53497e7","modified":1468242172000},{"_id":"themes/even/style/style.scss","shasum":"665276e16712b890b56fcd12e8382cad538bb367","modified":1468242172000},{"_id":"themes/even/layout/partial/header.jade","shasum":"4571928252e0226b5b013349782e8ed9bf9d51aa","modified":1468242172000},{"_id":"themes/even/source/favicon.png","shasum":"ef238acf711745e3a5954131efd1e3891102eda7","modified":1463926454000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","shasum":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1468242172000},{"_id":"public/js/back2top.js","modified":1468646996578,"shasum":"73bb560b8ef0b5fc41b520bae2837eabbf901e88"},{"_id":"public/fonts/iconfont/iconfont.woff","modified":1468646996583,"shasum":"6643bcb7dc8d516c457d5d159072ad6a704f8e28"},{"_id":"public/fonts/iconfont/iconfont.ttf","modified":1468646996588,"shasum":"d12124f70bdff7fd2b17baf0e23a621cbf03dc8e"},{"_id":"public/fonts/iconfont/iconfont.svg","modified":1468646996591,"shasum":"f56f35c911dbfbb123d13c6e52bf6eb19f1b46fc"},{"_id":"public/fonts/iconfont/iconfont.eot","modified":1468646996593,"shasum":"b8b1482337cea6995238e54a1551a3c46d57fb68"},{"_id":"public/fonts/iconfont/iconfont.css","modified":1468646996597,"shasum":"e88809b08df63794c3a433fee326bd605719ee0e"},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff2","modified":1468646996598,"shasum":"afd0f74128f1c21c5a542b2e100870e74da663b6"},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff","modified":1468646996600,"shasum":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5"},{"_id":"public/fonts/chancery/apple-chancery-webfont.ttf","modified":1468646996601,"shasum":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6"},{"_id":"public/fonts/chancery/apple-chancery-webfont.svg","modified":1468646996605,"shasum":"a94e508f306a742637653f98c6e8827b11d3c142"},{"_id":"public/fonts/chancery/apple-chancery-webfont.eot","modified":1468646996608,"shasum":"fef78bd502f74fdbf0316123e176454cb3eb4e50"},{"_id":"public/favicon.png","modified":1468646996611,"shasum":"ef238acf711745e3a5954131efd1e3891102eda7"},{"_id":"public/css/style.css","modified":1468646996614,"shasum":"27ad29093ed715396b6e6150425247bc6ac5b02f"},{"_id":"public/tags/index.html","modified":1486613441548,"shasum":"ce6df154fd80e74682f0690a76f71c98d5a840b5"},{"_id":"public/about/index.html","modified":1486613441640,"shasum":"a8890d723f6fd6cae4cf9c2695be9ede12f6d229"},{"_id":"public/2015/12/25/2015_12_25_01/index.html","modified":1468660693189,"shasum":"ec04210c7c15f6c721ca8cefcab62f1d29ab2af2"},{"_id":"public/2015/11/10/2015_11_10_01/index.html","modified":1468697425804,"shasum":"80673f7ce0aeeb58e1a8a274ff12dd96f1b5e674"},{"_id":"public/2015/08/05/2015_08_05_01/index.html","modified":1468660693312,"shasum":"0097b90be449e8db1f317240512a82a5a83e145b"},{"_id":"public/2015/07/02/2015_07_02_01/index.html","modified":1468660693358,"shasum":"c8e8bdaaee36f9833b337e9d2eaf63ecc2bc0480"},{"_id":"public/2015/06/18/2015_06_18_01/index.html","modified":1468660693411,"shasum":"6340b1c9f901ce13d0eff6d3015d31ebdf03cbe5"},{"_id":"public/2015/06/01/2015_06_01_01/index.html","modified":1468697425864,"shasum":"951f89b11d0d9bff44dccc4a319e19b3e1ee3e62"},{"_id":"public/2015/01/15/2015_01_15_01/index.html","modified":1468697426024,"shasum":"7877109c4869fc96747da1bd33fbb89ab578bbe7"},{"_id":"public/2014/11/15/2014_11_15_02/index.html","modified":1468697426074,"shasum":"7c25b6c303fbf368d331d16bec86dc1d54027692"},{"_id":"public/2014/10/10/2014_10_10_01/index.html","modified":1468697426123,"shasum":"b0c7db69c174534a452139594f37e26c9b418e6a"},{"_id":"public/archives/index.html","modified":1486613442395,"shasum":"3c29802a97ae9174c406c0018939efbcde377f80"},{"_id":"public/archives/2014/index.html","modified":1486613442481,"shasum":"4280632e7a1fa3d364716dc0ea03f32413237ee5"},{"_id":"public/archives/2014/10/index.html","modified":1468697426260,"shasum":"42287026fe5a012dd91bf459aaeb3fab0cb5bda8"},{"_id":"public/archives/2014/11/index.html","modified":1486613442524,"shasum":"4280632e7a1fa3d364716dc0ea03f32413237ee5"},{"_id":"public/archives/2015/index.html","modified":1486613442565,"shasum":"02f4955b917faf1906f0be2720dbe09243fc0def"},{"_id":"public/archives/2015/01/index.html","modified":1468697426392,"shasum":"65cd5d240fee8d0f630265a758b279b6328cebc4"},{"_id":"public/archives/2015/06/index.html","modified":1486613442653,"shasum":"c8d7253a6afd93b4b18c5415dd6b79b1f0caedea"},{"_id":"public/archives/2015/07/index.html","modified":1468660693969,"shasum":"d57407cee068d5a9b9225ebe4e685376ee5c6501"},{"_id":"public/archives/2015/08/index.html","modified":1468660694011,"shasum":"f4728b641932c664053a8960a88651f33e3ead69"},{"_id":"public/archives/2015/11/index.html","modified":1486613442699,"shasum":"63151666a43f4c1a771364161119eeabeeeb4046"},{"_id":"public/archives/2015/12/index.html","modified":1468660694095,"shasum":"8625d421bc60a1ae28e4529f5896f223d0e4e342"},{"_id":"public/atom.xml","modified":1486613857942,"shasum":"471be8a00ca7a6250b743c3de89a8f5c9b5f9120"},{"_id":"public/index.html","modified":1486613857981,"shasum":"b8411b2b63e5c56b60fda9b23961b9cb8f1a7a25"},{"_id":"public/tags/博客技术/index.html","modified":1468697426813,"shasum":"d34515f837a355328987c1acab1df9ddeb178171"},{"_id":"public/tags/iOS开发/index.html","modified":1468663713234,"shasum":"d73df82774d4bc43c6f30849ba98c75d46b4aaf2"},{"_id":"public/tags/开发工具/index.html","modified":1468663713275,"shasum":"4f20b96f16598bf4fc311fb30655814c5e1f44f6"},{"_id":"public/sitemap.xml","modified":1486613858026,"shasum":"cf5793fc2731ad8d257a5f338657e5a2a1e36022"},{"_id":"public/2015/05/05/2015_05_05_01/index.html","modified":1468697425916,"shasum":"90ef8a080ff9ae8294c72afe84ea26436707e781"},{"_id":"public/2015/03/18/2015_03_18_01/index.html","modified":1468697425970,"shasum":"169e53d2b3adb93b9434e0e8b5f06f58d75562e4"},{"_id":"public/archives/2015/03/index.html","modified":1486613442607,"shasum":"b28cf61b735cfbdda4aa91e67d58cdf28cfa121e"},{"_id":"public/archives/2015/05/index.html","modified":1468697426481,"shasum":"180f9cf042963a0a64ce7f1168bd4d21a6640d84"},{"_id":"public/tags/Blog/index.html","modified":1486613443228,"shasum":"a3dc6c3188338bc661e202d7d20386b09d77c593"},{"_id":"public/tags/iOS/index.html","modified":1486613443271,"shasum":"fa0158555724bdb7821904ff07913dbe3b55936f"},{"_id":"public/2016/07/12/2016_07_12_01/index.html","modified":1468697425746,"shasum":"bcd250ba6c7feee039ea8290fe4d1c6395c1c58c"},{"_id":"public/archives/2016/index.html","modified":1486613442732,"shasum":"35a13f7f7660ca3832f334619ae68a56d32a969f"},{"_id":"public/archives/2016/07/index.html","modified":1486613442912,"shasum":"d11ca9e9ef9a84941635055a3567269330d22bbd"},{"_id":"public/2016/07/16/201x_01_01_01/index.html","modified":1468684282396,"shasum":"cffb90ba6834a3c3c93eab770558c0a0a256dfe9"},{"_id":"public/tags/Project/index.html","modified":1486613443352,"shasum":"b47461a81272f997078945dfd24619f0cef3c9d9"},{"_id":"public/2016/07/17/201x_01_01_01/index.html","modified":1468688865894,"shasum":"6b7eb782ca3c4833b841ea2a46b25e19a5265672"},{"_id":"public/2017/01/01/2017_01_01_01/index.html","modified":1468697515362,"shasum":"40dd639e553509c6ab84ef909d504336c7028c84"},{"_id":"public/archives/2017/index.html","modified":1486613443043,"shasum":"2679bc0f14b54f8837a67efb2007195a46057c52"},{"_id":"public/archives/2017/01/index.html","modified":1486613443083,"shasum":"2679bc0f14b54f8837a67efb2007195a46057c52"},{"_id":"source/_posts/2014-11-18-01.md","shasum":"f1cf645f654eb16eaccb5a6b0d4d97e38d8a31b9","modified":1471679476000},{"_id":"source/_posts/2015-03-05-01.md","shasum":"9db073c4ee35de1f42ee96298f6b74b89a112f7b","modified":1471679492000},{"_id":"source/_posts/2015-06-01-01.md","shasum":"aa7f419f7c8c0c4562a72a66d1cb440f4e8cb92e","modified":1468674863000},{"_id":"source/_posts/2015-11-10-01.md","shasum":"9f12d0249269faea07656a31d6ebd56405d658d0","modified":1471679605000},{"_id":"source/_posts/2016-03-27-01.md","shasum":"b09a30189501e31f09c8e5ed3b0eed21ae9f01b8","modified":1471699253000},{"_id":"source/_posts/2016-05-29-01.md","shasum":"313e1c24deb0108f0e2608c0f923ea4a52a52def","modified":1471690630000},{"_id":"source/_posts/2016-06-22-01.md","shasum":"f0b998ba1e47b50f9303fd2af6b7353ad17e3f85","modified":1471683095000},{"_id":"source/_posts/2016-06-30-01.md","shasum":"072a97aeaf81e23736cf9f9d14d7e284c5969f5e","modified":1471682698000},{"_id":"source/_posts/2016-07-15-01.md","shasum":"66f75ed9315e6e716f573ac5b0c213494f9c2807","modified":1471681052000},{"_id":"source/_posts/2016-07-12-01.md","shasum":"b68e431cd48b15eefbbe940d35d8bc837ca27cb5","modified":1470897595000},{"_id":"source/_posts/2016-08-19-01.md","shasum":"bd06c9eff646b4458a23b106272d01a1525080dc","modified":1478422983000},{"_id":"public/2016/08/20/2016-06-30-01/index.html","modified":1471682099859,"shasum":"d8863ce20f6cd007d76dff75d3fb0020266d7eb6"},{"_id":"public/2016/08/20/2016-06-22-01/index.html","modified":1471682715474,"shasum":"ec075c2004e6b29bb5687bf686f8d29cae66b557"},{"_id":"public/2016/08/19/2016-08-19-01/index.html","modified":1486613441823,"shasum":"c18ca747231b3c8c20fe90436691de70674cd9e6"},{"_id":"public/2016/07/15/2016-07-15-01/index.html","modified":1486613441879,"shasum":"b6970ccc7c2bf1cf0e4d362abf0cce9b1128820d"},{"_id":"public/2016/07/12/2016-07-12-01/index.html","modified":1486613441939,"shasum":"76e43b75f5c192ad557ee361eca96ad7264922a2"},{"_id":"public/2016/05/29/2016-05-29-01/index.html","modified":1486613442090,"shasum":"23a8cd8209c63ee33cb82de5eff1bc2545e4a242"},{"_id":"public/2016/03/27/2016-03-27-01/index.html","modified":1486613442147,"shasum":"b3423b7cce5d44c3e6f0964d562f797640b73a23"},{"_id":"public/2015/11/10/2015-11-10-01/index.html","modified":1486613442193,"shasum":"3744bf27de8c5faba46d46caf96c9eb4b2a5788c"},{"_id":"public/2015/06/01/2015-06-01-01/index.html","modified":1486613442242,"shasum":"8e2352a8ab701ddfe7a56ced2936058aa31ff602"},{"_id":"public/2015/03/05/2015-03-05-01/index.html","modified":1486613442296,"shasum":"37639637f1234f13ea886bddb99500cce94c25af"},{"_id":"public/2014/11/18/2014-11-18-01/index.html","modified":1486613442346,"shasum":"47abd07eb0f9a49a1a1333e4f2b83b3642a3c3e8"},{"_id":"public/page/2/index.html","modified":1486613443176,"shasum":"c63d4e9a7927e3772471e02dc76cebe42913acdb"},{"_id":"public/archives/page/2/index.html","modified":1486613442435,"shasum":"5f396b16a97e722f78460616524306b5d419387b"},{"_id":"public/archives/2016/03/index.html","modified":1486613442780,"shasum":"eac0b15c669fd4fe1ec5713aa85bafb695e40f49"},{"_id":"public/archives/2016/05/index.html","modified":1486613442823,"shasum":"c8c6521d76d10c896ea707aa5526fea718084d83"},{"_id":"public/archives/2016/08/index.html","modified":1486613442955,"shasum":"2d454dddee2b851b7f73463fc48d62d570ba44d8"},{"_id":"public/tags/Mac/index.html","modified":1486613443407,"shasum":"357739d5945a293bd5394eb9c63aad7d63d6c3f5"},{"_id":"public/tags/Web/index.html","modified":1486613443450,"shasum":"9fb9c71cf443f1db052f60b2d8111aac9364c681"},{"_id":"public/2016/06/30/2016-06-30-01/index.html","modified":1486613441990,"shasum":"700f674ed2da835a57aebdae8456f50d6a83a76b"},{"_id":"public/archives/2016/06/index.html","modified":1486613442866,"shasum":"f0f53221279a7111eea9b14347b7b65d65e95b28"},{"_id":"public/2016/06/30/2016-06-22-01/index.html","modified":1486613442039,"shasum":"c17350a3288721438dbd45fc328e31a6824e16f5"},{"_id":"source/_posts/2016-11-04-01.md","shasum":"adfad1715b5b203c685fdb8eacddc9de05c67cae","modified":1478423432000},{"_id":"public/2016/11/04/2016-11-04-01/index.html","modified":1486613441777,"shasum":"dd33268958f64bad739bd7bff18bdfa139783832"},{"_id":"public/archives/2016/11/index.html","modified":1486613442997,"shasum":"145d85bb5c7bf5b0cdec836775835a5658277a4d"},{"_id":"source/_posts/2017-01-18-01.md","shasum":"3900d2e1c7b435ea5e9c8a63fc6305a39fce3e4d","modified":1486613839000},{"_id":"public/2017/01/18/2017-01-18-01/index.html","modified":1486613856648,"shasum":"0a0f48b16e6d59a77ba56344637052556cadf422"},{"_id":"public/tags/iOS/page/2/index.html","modified":1486613443310,"shasum":"138e6cc4cfb9ccb9a40c604c1cd0e3ec24fe4520"}],"Category":[],"Data":[],"Page":[{"title":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\nlayout: tags   # 添加使用 tags 模版\n---","date":"2016-07-16T05:14:00.000Z","updated":"2016-07-16T05:14:00.000Z","path":"tags/index.html","comments":1,"_id":"ciqoqi2o20003whmf9lx6bh30"},{"title":"About Fnoz","layout":"about","_content":"<div align=\"center\" display=\"inline\" float=\"left\"><img width=20% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/Gastly_logo.png\" alt=\"\"></div>\n\n<div align=\"center\">\niOS Dev.\n\nNow @Hangzhou.\n\nWorking for Weidian.\n\n[Github](http://github.com/fnoz)    ||    [Weibo](http://weibo.com/fnoz)    ||    [Twitter](https://twitter.com/fnozcn)</div>","source":"about/index.md","raw":"---\ntitle: About Fnoz\nlayout: about   # 添加使用 about 模版\n---\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=20% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/Gastly_logo.png\" alt=\"\"></div>\n\n<div align=\"center\">\niOS Dev.\n\nNow @Hangzhou.\n\nWorking for Weidian.\n\n[Github](http://github.com/fnoz)    ||    [Weibo](http://weibo.com/fnoz)    ||    [Twitter](https://twitter.com/fnozcn)</div>","date":"2016-08-20T13:47:36.000Z","updated":"2016-08-20T13:47:36.000Z","path":"about/index.html","_id":"ciqoqi2o40004whmf5alb446e","comments":1}],"Post":[{"title":"OC获取类名的方法","date":"2014-11-18T08:00:00.000Z","_content":"iOS开发中获取类名的2种方法：\n\n```\n+ (NSString*)getClassName0:(id)obj\n{\n    const char* className = class_getName([obj class]);\n    return [NSString stringWithUTF8String:className];\n}\n\n+ (NSString*)getClassName1:(id)obj\n{\n    return NSStringFromClass([self class]);\n}\n```\n<!--more-->\n\n","source":"_posts/2014-11-18-01.md","raw":"title: OC获取类名的方法\ndate: 2014-11-18 16:00:00\ntags: [Blog,iOS]\n---\niOS开发中获取类名的2种方法：\n\n```\n+ (NSString*)getClassName0:(id)obj\n{\n    const char* className = class_getName([obj class]);\n    return [NSString stringWithUTF8String:className];\n}\n\n+ (NSString*)getClassName1:(id)obj\n{\n    return NSStringFromClass([self class]);\n}\n```\n<!--more-->\n\n","slug":"2014-11-18-01","published":1,"updated":"2016-08-20T07:51:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuvz0000uwjgdkzljql3"},{"title":"写了一个 Mac 编码解码小工具 Unicoder","date":"2016-08-18T16:00:00.000Z","_content":"<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/unicoder_preview1.png\" alt=\"\"></div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=15% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/unicoder_logo.png\" alt=\"\"></div>\n\nSwift实现，Mac端字符串编码、解码小工具。\n\n开源在[这里](https://github.com/Fnoz/Unicoder4Mac)。\n\n<!--more-->","source":"_posts/2016-08-19-01.md","raw":"title: 写了一个 Mac 编码解码小工具 Unicoder\ndate: 2016-08-19 00:00:00\ntags: [Project,Mac]\n---\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/unicoder_preview1.png\" alt=\"\"></div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=15% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/unicoder_logo.png\" alt=\"\"></div>\n\nSwift实现，Mac端字符串编码、解码小工具。\n\n开源在[这里](https://github.com/Fnoz/Unicoder4Mac)。\n\n<!--more-->","slug":"2016-08-19-01","published":1,"updated":"2016-11-06T09:03:03.000Z","_id":"cis2xiuwk0003uwjgzxhifjfu","comments":1,"layout":"post","photos":[],"link":""},{"title":"写了一个Swift碎纸机删除动画FNPaperShredder","date":"2016-07-14T16:00:00.000Z","_content":"<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_04.gif\" alt=\"\"> <img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_05.gif\" alt=\"\"></div>\n\nSwift实现的超酷的碎纸机动画：包含2种模式：纸条和纸片。\n\n开源在[这里](https://github.com/Fnoz/FNPaperShredder)。\n\n<!--more-->","source":"_posts/2016-07-15-01.md","raw":"title: 写了一个Swift碎纸机删除动画FNPaperShredder\ndate: 2016-07-15 00:00:00\ntags: [Project,iOS]\n---\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_04.gif\" alt=\"\"> <img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_05.gif\" alt=\"\"></div>\n\nSwift实现的超酷的碎纸机动画：包含2种模式：纸条和纸片。\n\n开源在[这里](https://github.com/Fnoz/FNPaperShredder)。\n\n<!--more-->","slug":"2016-07-15-01","published":1,"updated":"2016-08-20T08:17:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuwv0007uwjgf7bbr1mo"},{"title":"Swift炫酷动效StarWars.iOS剖析","date":"2016-07-11T18:33:00.000Z","_content":"Yalantis团队简直就是我的偶像，用OC和Swift代码实现了诸多炫酷的动效。在这里，我将以Yalantis的StarWars.iOS作为分析对象，剖析其中几个炫酷动效的实现，就当学习了。\n\nStarWars.iOS（[https://github.com/Yalantis/StarWars.iOS](https://github.com/Yalantis/StarWars.iOS)）是超炫酷的一套动效，其Swift代码的实现在Github已经获得2400+赞，效果如下：\n<div align=center>\n![star_wars-concept.gif](http://fnoz-blog.bj.bcebos.com/20160712_00.gif)\n</div>\n\n我在这里想要剖析的主要是3块：\n\n1. 星空背景；\n2. 点击开关后的过渡动效；\n3. 破裂散落效果；\n<!--more-->\n\n建议clone一份[代码](https://github.com/Yalantis/StarWars.iOS)，不然估计是看得一头雾水了。\n\n##1. 星空背景\n\n<div align=center>\n![gif0.gif](http://fnoz-blog.bj.bcebos.com/20160712_01.gif)\n</div>\n\n这个之前我用过，靠`CAEmitterLayer`和`CAEmitterCell`实现，这两个类可以实现大部分的粒子效果，包括火焰、烟雾等效果，这边是我之前写的一个很渣的例子[FNFogEaseOut](https://github.com/Fnoz/FNFogEaseOut)。利用`CAEmitterLayer`和`CAEmitterCell`，可以控制粒子的形状、图案、初始速度、加速度、生命时间、缩放速率等等。\n\n在这里看一下核心的代码段（`StarsOverlay.swift`）：\n\n```\nemitter.emitterMode = kCAEmitterLayerOutline\nemitter.emitterShape = kCAEmitterLayerCircle\nemitter.renderMode = kCAEmitterLayerOldestFirst\nemitter.preservesDepth = true\n```\n\n在这里指定了`CAEmitterLayer`的发送模式（`kCAEmitterLayerOutline`）、发送源形状（`kCAEmitterLayerOutline`）、渲染模式（`kCAEmitterLayerOldestFirst`）。\n\n```\nparticle = CAEmitterCell() \nparticle.contents = UIImage(named: \"spark\")!.CGImage\nparticle.birthRate = 10\nparticle.lifetime = 50\nparticle.lifetimeRange = 5\nparticle.velocity = 20\nparticle.velocityRange = 10\nparticle.scale = 0.02\nparticle.scaleRange = 0.1\nparticle.scaleSpeed = 0.02\nemitter.emitterCells = [particle]\n```\n让`CAEmitterCell`以10个/s的生成速率生成，并指定了粒子的生命时间、速度、缩放比例和缩放速度。\n\n最后实现的效果非常梦幻，非常关键的一段小代码：\n\n```\nemitterTimer = NSTimer.scheduledTimerWithTimeInterval(0.1, target: self, selector: #selector(randomizeEmitterPosition), userInfo: nil, repeats: true)\nfunc randomizeEmitterPosition() {\n\tlet sizeWidth = max(bounds.width, bounds.height)\n\tlet radius = CGFloat(arc4random()) % sizeWidth\n\temitter.emitterSize = CGSize(width: radius, height: radius)\n\tparticle.birthRate = 10 + sqrt(Float(radius))\n}\n```\n\n这一段代码使得粒子发射源的位置和生成速率具有一定的随机性，不然就会出现靠近中心的位置有很对星星，但是远一点的地方稀稀疏疏的情况。\n\n*总结：核心实现是`CAEmitterLayer`和`CAEmitterCell`。*\n\n##2. 点击开关后的过渡动效\n\n<div align=center>\n![gif1.gif](http://fnoz-blog.bj.bcebos.com/20160712_02.gif)\n</div>\n\n这个虽然说看着像`UIViewController`的过渡动效，实际上只是`UIView`的过渡。\n\n简单的说，就是获取当前的`View`的界面新建一个`View`，再通过`CAShapeLayer`设为`layer.mask`来抠一个洞，实时调整这个洞的大小，从而实现圆形区域放大的效果。\n\n核心代码（`UIView+CircularAnimation.swift`）：\n\n```\nlet snapshot = self.snapshotViewAfterScreenUpdates(false)\nsnapshot.frame = self.bounds\nself.addSubview(snapshot)\n```\n\n获取当前的`View`的界面新建一个`View`，重点是`snapshotViewAfterScreenUpdates`这个方法，iOS7之后终于再也不用UIGraphics获取截图了。这个方法后面的`bool`若为`false`，取到的即是当前的页面状态；否则如果是下面这样的代码，你取到的是一片空白，因为该参数表示是否在所有效果应用在视图上了以后再获取快照：\n\n```\n[view snapshotViewAfterScreenUpdates:YES];\n[view setAlpha:0.0];\n```\n\n核心代码（`CircularRevealAnimator.swift`）：\n\n```\nlet startCirclePath = CGPathCreateWithEllipseInRect(SquareAroundCircle(center, radius: startRadius), UnsafePointer())\nlet endCirclePath = CGPathCreateWithEllipseInRect(SquareAroundCircle(center, radius: endRadius), UnsafePointer())\nvar startPath = startCirclePath, endPath = endCirclePath\nvar path = CGPathCreateMutable()\nCGPathAddRect(path, nil, layer.bounds)\nCGPathAddPath(path, nil, startCirclePath)\nstartPath = path\npath = CGPathCreateMutable()\nCGPathAddRect(path, nil, layer.bounds)\nCGPathAddPath(path, nil, endCirclePath)\nendPath = path\n```\n\n`startPath`和`endPath`分别为初始状态的小圆和最终状态的大圆；\n\n```\nanimation = CABasicAnimation(keyPath: \"path\")\nanimation.fromValue = startPath\nanimation.toValue = endPath\n\nmask.addAnimation(animation, forKey: \"reveal\")\n```\n\n实现被抠区域从小变大的动效。\n\n*总结：核心实现是`snapshotViewAfterScreenUpdates`获取截图、`CAShapeLayer`指定`UIView`的`layer.mask`。*\n\n##3. 破裂散落效果\n\n<div align=center>\n![gif2.gif](http://fnoz-blog.bj.bcebos.com/20160712_03.gif)\n</div>\n\n其实这个效果是整套动效的关键，也是我最喜欢的部分。\n前面讲到了`CAEmitterCell`粒子，估计会有很多人会和我一样，想用矩形或正方形的粒子来实现这个效果。不过我没能继续做下去，并且StarWars.iOS中也不是这样实现的。\n\n另外，这是一个`UIViewController`的过渡动画。\n\n实现的关键和上面讲到的过渡动画有一点类似：\n\n1. 截图；\n2. 分割成小块；\n3. 散落；\n\n自定义`UIViewController`过渡动画，需要用到`protocol` `UIViewControllerAnimatedTransitioning`，实现下面2个方法：\n\n```\npublic func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n\n前者制定过渡动画的时长，后者可以拿到过渡前后的页面View，从而自定义过渡过程。\n\n自定义过渡核心代码（`StarWarsUIDynamicAnimator.swift`）：\n\n```\npublic func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n\treturn self.duration\n}\n\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n\t...\n}\n```\n\n破裂散落效果核心代码：\n\n```\nlet fromViewSnapshot = fromView.snapshotViewAfterScreenUpdates(false)\nfor ... {\n\tfor ... {\n\t\tlet snapshotRegion = CGRect(x: x, y: y, width: width, height: height)\n\t\tlet snapshot = fromViewSnapshot.resizableSnapshotViewFromRect(snapshotRegion, afterScreenUpdates: false, withCapInsets: UIEdgeInsetsZero)\n\t\t containerView.addSubview(snapshot)\n```\n\n获取当前`View`的截图`View`，并用`resizableSnapshotViewFromRect`得到各个方块所在位置的截图`View`。\n\n```\nfunc randomFloatBetween(smallNumber: CGFloat, and bigNumber: CGFloat) -> CGFloat {\n\tlet diff = bigNumber - smallNumber\n\treturn CGFloat(arc4random()) / 100.0 % diff + smallNumber\n}\n\nlet push = UIPushBehavior(items: [snapshot], mode: .Instantaneous)\npush.pushDirection = CGVector(dx: randomFloatBetween(-0.15 , and: 0.15), dy: randomFloatBetween(-0.15 , and: 0))\npush.active = true\nanimator.addBehavior(push)\n                \nlet gravity = UIGravityBehavior(items: snapshots)\nanimator.addBehavior(gravity)\n\n```\n\n给每个小块加上瞬间（`Instantaneous `）的推力（`UIPushBehavior `），`randomFloatBetween`的随机部分，使得每个小块在竖直和水平上都有些错开，达到裂开的效果。\n\n给snapshots加上重力，实现下落的效果。\n\n##总结\n\n其实我早就想仔细研究这个动效的实现了，但是看着这么炫酷，总感觉是超复杂的实现。潜下心来看代码，虽然代码也不短，但是从实现思路和核心知识点来看，都不复杂。\n\n这3个动效学到的新知识：`CAEmitterLayer`和`CAEmitterCell`、`snapshotViewAfterScreenUpdates`截图、`UIPushBehavior`和`UIGravityBehavior`。\n\n","source":"_posts/2016-07-12-01.md","raw":"title: Swift炫酷动效StarWars.iOS剖析\ndate: 2016-07-12 02:33:00\ntags: [Blog,iOS]\n---\nYalantis团队简直就是我的偶像，用OC和Swift代码实现了诸多炫酷的动效。在这里，我将以Yalantis的StarWars.iOS作为分析对象，剖析其中几个炫酷动效的实现，就当学习了。\n\nStarWars.iOS（[https://github.com/Yalantis/StarWars.iOS](https://github.com/Yalantis/StarWars.iOS)）是超炫酷的一套动效，其Swift代码的实现在Github已经获得2400+赞，效果如下：\n<div align=center>\n![star_wars-concept.gif](http://fnoz-blog.bj.bcebos.com/20160712_00.gif)\n</div>\n\n我在这里想要剖析的主要是3块：\n\n1. 星空背景；\n2. 点击开关后的过渡动效；\n3. 破裂散落效果；\n<!--more-->\n\n建议clone一份[代码](https://github.com/Yalantis/StarWars.iOS)，不然估计是看得一头雾水了。\n\n##1. 星空背景\n\n<div align=center>\n![gif0.gif](http://fnoz-blog.bj.bcebos.com/20160712_01.gif)\n</div>\n\n这个之前我用过，靠`CAEmitterLayer`和`CAEmitterCell`实现，这两个类可以实现大部分的粒子效果，包括火焰、烟雾等效果，这边是我之前写的一个很渣的例子[FNFogEaseOut](https://github.com/Fnoz/FNFogEaseOut)。利用`CAEmitterLayer`和`CAEmitterCell`，可以控制粒子的形状、图案、初始速度、加速度、生命时间、缩放速率等等。\n\n在这里看一下核心的代码段（`StarsOverlay.swift`）：\n\n```\nemitter.emitterMode = kCAEmitterLayerOutline\nemitter.emitterShape = kCAEmitterLayerCircle\nemitter.renderMode = kCAEmitterLayerOldestFirst\nemitter.preservesDepth = true\n```\n\n在这里指定了`CAEmitterLayer`的发送模式（`kCAEmitterLayerOutline`）、发送源形状（`kCAEmitterLayerOutline`）、渲染模式（`kCAEmitterLayerOldestFirst`）。\n\n```\nparticle = CAEmitterCell() \nparticle.contents = UIImage(named: \"spark\")!.CGImage\nparticle.birthRate = 10\nparticle.lifetime = 50\nparticle.lifetimeRange = 5\nparticle.velocity = 20\nparticle.velocityRange = 10\nparticle.scale = 0.02\nparticle.scaleRange = 0.1\nparticle.scaleSpeed = 0.02\nemitter.emitterCells = [particle]\n```\n让`CAEmitterCell`以10个/s的生成速率生成，并指定了粒子的生命时间、速度、缩放比例和缩放速度。\n\n最后实现的效果非常梦幻，非常关键的一段小代码：\n\n```\nemitterTimer = NSTimer.scheduledTimerWithTimeInterval(0.1, target: self, selector: #selector(randomizeEmitterPosition), userInfo: nil, repeats: true)\nfunc randomizeEmitterPosition() {\n\tlet sizeWidth = max(bounds.width, bounds.height)\n\tlet radius = CGFloat(arc4random()) % sizeWidth\n\temitter.emitterSize = CGSize(width: radius, height: radius)\n\tparticle.birthRate = 10 + sqrt(Float(radius))\n}\n```\n\n这一段代码使得粒子发射源的位置和生成速率具有一定的随机性，不然就会出现靠近中心的位置有很对星星，但是远一点的地方稀稀疏疏的情况。\n\n*总结：核心实现是`CAEmitterLayer`和`CAEmitterCell`。*\n\n##2. 点击开关后的过渡动效\n\n<div align=center>\n![gif1.gif](http://fnoz-blog.bj.bcebos.com/20160712_02.gif)\n</div>\n\n这个虽然说看着像`UIViewController`的过渡动效，实际上只是`UIView`的过渡。\n\n简单的说，就是获取当前的`View`的界面新建一个`View`，再通过`CAShapeLayer`设为`layer.mask`来抠一个洞，实时调整这个洞的大小，从而实现圆形区域放大的效果。\n\n核心代码（`UIView+CircularAnimation.swift`）：\n\n```\nlet snapshot = self.snapshotViewAfterScreenUpdates(false)\nsnapshot.frame = self.bounds\nself.addSubview(snapshot)\n```\n\n获取当前的`View`的界面新建一个`View`，重点是`snapshotViewAfterScreenUpdates`这个方法，iOS7之后终于再也不用UIGraphics获取截图了。这个方法后面的`bool`若为`false`，取到的即是当前的页面状态；否则如果是下面这样的代码，你取到的是一片空白，因为该参数表示是否在所有效果应用在视图上了以后再获取快照：\n\n```\n[view snapshotViewAfterScreenUpdates:YES];\n[view setAlpha:0.0];\n```\n\n核心代码（`CircularRevealAnimator.swift`）：\n\n```\nlet startCirclePath = CGPathCreateWithEllipseInRect(SquareAroundCircle(center, radius: startRadius), UnsafePointer())\nlet endCirclePath = CGPathCreateWithEllipseInRect(SquareAroundCircle(center, radius: endRadius), UnsafePointer())\nvar startPath = startCirclePath, endPath = endCirclePath\nvar path = CGPathCreateMutable()\nCGPathAddRect(path, nil, layer.bounds)\nCGPathAddPath(path, nil, startCirclePath)\nstartPath = path\npath = CGPathCreateMutable()\nCGPathAddRect(path, nil, layer.bounds)\nCGPathAddPath(path, nil, endCirclePath)\nendPath = path\n```\n\n`startPath`和`endPath`分别为初始状态的小圆和最终状态的大圆；\n\n```\nanimation = CABasicAnimation(keyPath: \"path\")\nanimation.fromValue = startPath\nanimation.toValue = endPath\n\nmask.addAnimation(animation, forKey: \"reveal\")\n```\n\n实现被抠区域从小变大的动效。\n\n*总结：核心实现是`snapshotViewAfterScreenUpdates`获取截图、`CAShapeLayer`指定`UIView`的`layer.mask`。*\n\n##3. 破裂散落效果\n\n<div align=center>\n![gif2.gif](http://fnoz-blog.bj.bcebos.com/20160712_03.gif)\n</div>\n\n其实这个效果是整套动效的关键，也是我最喜欢的部分。\n前面讲到了`CAEmitterCell`粒子，估计会有很多人会和我一样，想用矩形或正方形的粒子来实现这个效果。不过我没能继续做下去，并且StarWars.iOS中也不是这样实现的。\n\n另外，这是一个`UIViewController`的过渡动画。\n\n实现的关键和上面讲到的过渡动画有一点类似：\n\n1. 截图；\n2. 分割成小块；\n3. 散落；\n\n自定义`UIViewController`过渡动画，需要用到`protocol` `UIViewControllerAnimatedTransitioning`，实现下面2个方法：\n\n```\npublic func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning)\n```\n\n前者制定过渡动画的时长，后者可以拿到过渡前后的页面View，从而自定义过渡过程。\n\n自定义过渡核心代码（`StarWarsUIDynamicAnimator.swift`）：\n\n```\npublic func transitionDuration(transitionContext: UIViewControllerContextTransitioning?) -> NSTimeInterval {\n\treturn self.duration\n}\n\npublic func animateTransition(transitionContext: UIViewControllerContextTransitioning) {\n\t...\n}\n```\n\n破裂散落效果核心代码：\n\n```\nlet fromViewSnapshot = fromView.snapshotViewAfterScreenUpdates(false)\nfor ... {\n\tfor ... {\n\t\tlet snapshotRegion = CGRect(x: x, y: y, width: width, height: height)\n\t\tlet snapshot = fromViewSnapshot.resizableSnapshotViewFromRect(snapshotRegion, afterScreenUpdates: false, withCapInsets: UIEdgeInsetsZero)\n\t\t containerView.addSubview(snapshot)\n```\n\n获取当前`View`的截图`View`，并用`resizableSnapshotViewFromRect`得到各个方块所在位置的截图`View`。\n\n```\nfunc randomFloatBetween(smallNumber: CGFloat, and bigNumber: CGFloat) -> CGFloat {\n\tlet diff = bigNumber - smallNumber\n\treturn CGFloat(arc4random()) / 100.0 % diff + smallNumber\n}\n\nlet push = UIPushBehavior(items: [snapshot], mode: .Instantaneous)\npush.pushDirection = CGVector(dx: randomFloatBetween(-0.15 , and: 0.15), dy: randomFloatBetween(-0.15 , and: 0))\npush.active = true\nanimator.addBehavior(push)\n                \nlet gravity = UIGravityBehavior(items: snapshots)\nanimator.addBehavior(gravity)\n\n```\n\n给每个小块加上瞬间（`Instantaneous `）的推力（`UIPushBehavior `），`randomFloatBetween`的随机部分，使得每个小块在竖直和水平上都有些错开，达到裂开的效果。\n\n给snapshots加上重力，实现下落的效果。\n\n##总结\n\n其实我早就想仔细研究这个动效的实现了，但是看着这么炫酷，总感觉是超复杂的实现。潜下心来看代码，虽然代码也不短，但是从实现思路和核心知识点来看，都不复杂。\n\n这3个动效学到的新知识：`CAEmitterLayer`和`CAEmitterCell`、`snapshotViewAfterScreenUpdates`截图、`UIPushBehavior`和`UIGravityBehavior`。\n\n","slug":"2016-07-12-01","published":1,"updated":"2016-08-11T06:39:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuwx000auwjgw2iu2z51"},{"title":"写了一个Swift文字随机渐现动画FNBlingBlingLabel","date":"2016-06-29T16:00:00.000Z","_content":"<div align=\"center\" display=\"inline\" float=\"left\"><img width=50% src=\"http://fnoz-blog.bj.bcebos.com/20160711_00.gif\" alt=\"\"></div>\n\nSwift实现的UILabel文字随机渐隐渐现, Swift版RQShineLabel。\n\n开源在[这里](https://github.com/Fnoz/FNBlingBlingLabel)。\n\n<!--more-->","source":"_posts/2016-06-30-01.md","raw":"title: 写了一个Swift文字随机渐现动画FNBlingBlingLabel\ndate: 2016-06-30 00:00:00\ntags: [Project,iOS]\n---\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=50% src=\"http://fnoz-blog.bj.bcebos.com/20160711_00.gif\" alt=\"\"></div>\n\nSwift实现的UILabel文字随机渐隐渐现, Swift版RQShineLabel。\n\n开源在[这里](https://github.com/Fnoz/FNBlingBlingLabel)。\n\n<!--more-->","slug":"2016-06-30-01","published":1,"updated":"2016-08-20T08:44:58.000Z","_id":"cis2xiux0000duwjgp0lyy20t","comments":1,"layout":"post","photos":[],"link":""},{"title":"写了一个Swift火柴下拉动画FNMatchPull","date":"2016-06-29T16:00:00.000Z","_content":"<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_01.gif\" alt=\"\"> <img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_02.gif\" alt=\"\"> <img width=68% src=\"http://fnoz-blog.bj.bcebos.com/20160711_03.gif\" alt=\"\"></div>\n\nSwift实现的火柴图案&火柴文字下拉刷新动效（超炫酷下拉刷新），Swift&加强版本CBStoreHouseRefreshControl。\n\n开源在[这里](https://github.com/Fnoz/FNMatchPull)。\n\n<!--more-->","source":"_posts/2016-06-22-01.md","raw":"title: 写了一个Swift火柴下拉动画FNMatchPull\ndate: 2016-06-30 00:00:00\ntags: [Project,iOS]\n---\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_01.gif\" alt=\"\"> <img width=33% src=\"http://fnoz-blog.bj.bcebos.com/20160711_02.gif\" alt=\"\"> <img width=68% src=\"http://fnoz-blog.bj.bcebos.com/20160711_03.gif\" alt=\"\"></div>\n\nSwift实现的火柴图案&火柴文字下拉刷新动效（超炫酷下拉刷新），Swift&加强版本CBStoreHouseRefreshControl。\n\n开源在[这里](https://github.com/Fnoz/FNMatchPull)。\n\n<!--more-->","slug":"2016-06-22-01","published":1,"updated":"2016-08-20T08:51:35.000Z","_id":"cis2xiux5000guwjgsyc4crlv","comments":1,"layout":"post","photos":[],"link":""},{"title":"写了一个获取APP图标的小工具网页 - Node","date":"2016-05-28T16:00:00.000Z","_content":"\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/getappicon_preview0.png\" alt=\"\"></div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/getappicon_preview1.png\" alt=\"\"></div>\n\n一个可以搜索到Apple AppStore上App高清图标的网站，由Node编写。\n\n开源在[这里](https://github.com/Fnoz/GetAppIcon)\n\n<!--more-->","source":"_posts/2016-05-29-01.md","raw":"title: 写了一个获取APP图标的小工具网页 - Node\ndate: 2016-05-29 00:00:00\ntags: [Project,Web]\n---\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/getappicon_preview0.png\" alt=\"\"></div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=60% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/getappicon_preview1.png\" alt=\"\"></div>\n\n一个可以搜索到Apple AppStore上App高清图标的网站，由Node编写。\n\n开源在[这里](https://github.com/Fnoz/GetAppIcon)\n\n<!--more-->","slug":"2016-05-29-01","published":1,"updated":"2016-08-20T10:57:10.000Z","_id":"cis2xiux8000juwjg0brkspzc","comments":1,"layout":"post","photos":[],"link":""},{"title":"写了一个iOS App 明星壁纸","date":"2016-03-26T16:00:00.000Z","_content":"\n<div align=\"center\">[明星壁纸](https://itunes.apple.com/cn/app/ming-xing-bi-zhi-ou-xiang/id1104673142?mt=8)</div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=10% src=\"http://fnoz-blog.bj.bcebos.com/20160711_07.png\" alt=\"\"></div>\n\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=100% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/starwallpaper_preview.png\" alt=\"\"></div>\n\n一款以明星的高清壁纸作为主要导向的壁纸App。\n\n客户端由OC编写，开源在[这里](https://github.com/Fnoz/StarWallpaper)\n\n服务端用Node做了一下接口的转发，开源在[这里](https://github.com/Fnoz/StarWallpaperServer)\n\n<!--more-->","source":"_posts/2016-03-27-01.md","raw":"title: 写了一个iOS App 明星壁纸\ndate: 2016-03-27 00:00:00\ntags: [Project,iOS]\n---\n\n<div align=\"center\">[明星壁纸](https://itunes.apple.com/cn/app/ming-xing-bi-zhi-ou-xiang/id1104673142?mt=8)</div>\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=10% src=\"http://fnoz-blog.bj.bcebos.com/20160711_07.png\" alt=\"\"></div>\n\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=100% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/starwallpaper_preview.png\" alt=\"\"></div>\n\n一款以明星的高清壁纸作为主要导向的壁纸App。\n\n客户端由OC编写，开源在[这里](https://github.com/Fnoz/StarWallpaper)\n\n服务端用Node做了一下接口的转发，开源在[这里](https://github.com/Fnoz/StarWallpaperServer)\n\n<!--more-->","slug":"2016-03-27-01","published":1,"updated":"2016-08-20T13:20:53.000Z","_id":"cis2xiuxa000nuwjgc0sc8r2y","comments":1,"layout":"post","photos":[],"link":""},{"title":"iOS8开发删除相册，无法再创建","date":"2015-11-10T11:34:00.000Z","_content":"我们知道，可以通过以下方法将图片保存到相册的指定文件夹：\n\n```\nALAssetsLibrary *mylibrary = [[ALAssetsLibrary alloc] init];\n[mylibrary addAssetsGroupAlbumWithName:@\"FnozAlbum\" resultBlock:^(ALAssetsGroup *group) {\n                                        NSLog(@\"Created a album!\");\n                                    } failureBlock:^(NSError *error) {\n                                        NSLog(@\"Failed to create!\");\n                                    }];\n```\n**Tips**：使用前要先引入`AssetsLibrary.framework`；\n\n在iOS8之后的系统，用这个方法会出现一个问题：删除创建的文件夹后，无法再创建文件夹。\n\n**原因**：在iOS8之后，系统的相册中增加了一个“最近删除”文件夹，也就是说，用原来的方式创建文件夹，删除的文件夹并没有被真正删除，而只是修改了状态，所以在此时创建失败。\n<!--more-->\n\niOS8以后的相册操作要靠`Photos.framework`实现；\n\n解决办法如下：\n\n1. 引入`Photos.framework`；\n2. 调用以下方法来创建相册：\n\n```\n[[PHPhotoLibrary sharedPhotoLibrary] performChanges:^{\n                                        [PHAssetCollectionChangeRequest creationRequestForAssetCollectionWithTitle:@\"FnozAlbum\"];\n                                    } completionHandler:^(BOOL success, NSError * _Nullable error) {\n                                        if (success) {\n                                            NSLog(@\"Created a album!\");\n                                        }\n                                        else if (error)\n                                        {\n                                            NSLog(@\"Failed to create!%@\", error);\n                                        }\n                                    }];\n```\n\n需要注意的是，这个新方法只支持iOS8及以上的系统；","source":"_posts/2015-11-10-01.md","raw":"title: iOS8开发删除相册，无法再创建\ndate: 2015-11-10 19:34:00\ntags: [Blog,iOS]\n---\n我们知道，可以通过以下方法将图片保存到相册的指定文件夹：\n\n```\nALAssetsLibrary *mylibrary = [[ALAssetsLibrary alloc] init];\n[mylibrary addAssetsGroupAlbumWithName:@\"FnozAlbum\" resultBlock:^(ALAssetsGroup *group) {\n                                        NSLog(@\"Created a album!\");\n                                    } failureBlock:^(NSError *error) {\n                                        NSLog(@\"Failed to create!\");\n                                    }];\n```\n**Tips**：使用前要先引入`AssetsLibrary.framework`；\n\n在iOS8之后的系统，用这个方法会出现一个问题：删除创建的文件夹后，无法再创建文件夹。\n\n**原因**：在iOS8之后，系统的相册中增加了一个“最近删除”文件夹，也就是说，用原来的方式创建文件夹，删除的文件夹并没有被真正删除，而只是修改了状态，所以在此时创建失败。\n<!--more-->\n\niOS8以后的相册操作要靠`Photos.framework`实现；\n\n解决办法如下：\n\n1. 引入`Photos.framework`；\n2. 调用以下方法来创建相册：\n\n```\n[[PHPhotoLibrary sharedPhotoLibrary] performChanges:^{\n                                        [PHAssetCollectionChangeRequest creationRequestForAssetCollectionWithTitle:@\"FnozAlbum\"];\n                                    } completionHandler:^(BOOL success, NSError * _Nullable error) {\n                                        if (success) {\n                                            NSLog(@\"Created a album!\");\n                                        }\n                                        else if (error)\n                                        {\n                                            NSLog(@\"Failed to create!%@\", error);\n                                        }\n                                    }];\n```\n\n需要注意的是，这个新方法只支持iOS8及以上的系统；","slug":"2015-11-10-01","published":1,"updated":"2016-08-20T07:53:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuxd000quwjg083d47ay"},{"title":"使用Chisel在lldb中查看视图层级","date":"2015-06-01T15:13:00.000Z","_content":"\n#介绍\n\n[Chisel](https://github.com/facebook/chisel)是Facebook提供的基于Python的一套开源工具，使你可以在Xcode的lldb中通过`pvc`、`pviews`等指令显示视图层级，作为视图调试的一种手段。\n\n#简单使用\n\n这套工具的使用是在XCode的lldb窗口中通过输入命令进行操作。\n先看两个最常见的例子。\n<div align=center>\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_pvc.png)\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_border.png)\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_mask.png)\n</div>\n<div align=center>\n<!--more-->\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_border_mask_iphone.png)\n</div>\n\n一方面是可以打印出页面的一些信息，另一方面是可以高亮、隐藏一些页面，甚至调整点击事件的响应链；\n\n常见的几条指令就在下面了：\n<div align=center>\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_fblist.png)\n</div>\n\n这些是现成的功能，除此之外，你还可以用Python写自己的命令。\n\n#安装\n安装的方法很简单，有装Homebrew的，直接执行这行代码即可\n```\nbrew install chisel\n```\n\n你也可以手动安装：下载项目代码后\n```\ncd ~/.lldbinit\n```\n在最后加上\n```\ncommand script import 下载的项目中fblldb.py的路径\n```\n\n装完以后你就可以玩一玩了，虽然不是每天都用的功能，但是在某些特殊场景，可以帮上一些忙。","source":"_posts/2015-06-01-01.md","raw":"title: 使用Chisel在lldb中查看视图层级\ndate: 2015-06-01 23:13:00\ntags: [Blog,iOS]\n---\n\n#介绍\n\n[Chisel](https://github.com/facebook/chisel)是Facebook提供的基于Python的一套开源工具，使你可以在Xcode的lldb中通过`pvc`、`pviews`等指令显示视图层级，作为视图调试的一种手段。\n\n#简单使用\n\n这套工具的使用是在XCode的lldb窗口中通过输入命令进行操作。\n先看两个最常见的例子。\n<div align=center>\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_pvc.png)\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_border.png)\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_mask.png)\n</div>\n<div align=center>\n<!--more-->\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_border_mask_iphone.png)\n</div>\n\n一方面是可以打印出页面的一些信息，另一方面是可以高亮、隐藏一些页面，甚至调整点击事件的响应链；\n\n常见的几条指令就在下面了：\n<div align=center>\n![chisel](http://7xl2dx.com1.z0.glb.clouddn.com/chisel_fblist.png)\n</div>\n\n这些是现成的功能，除此之外，你还可以用Python写自己的命令。\n\n#安装\n安装的方法很简单，有装Homebrew的，直接执行这行代码即可\n```\nbrew install chisel\n```\n\n你也可以手动安装：下载项目代码后\n```\ncd ~/.lldbinit\n```\n在最后加上\n```\ncommand script import 下载的项目中fblldb.py的路径\n```\n\n装完以后你就可以玩一玩了，虽然不是每天都用的功能，但是在某些特殊场景，可以帮上一些忙。","slug":"2015-06-01-01","published":1,"updated":"2016-07-16T13:14:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuxf000tuwjgif5w7btq"},{"title":"用FLEX获取iOS设备视图层级","date":"2015-03-05T12:00:00.000Z","_content":"关于FLEX使用的截图如下：\n<div align=center>\n![flex](http://7xl2dx.com1.z0.glb.clouddn.com/fnozBlog_flex.jpg)\n</div>\n\n分为越狱和非越狱的使用方式：\n\n01.越狱方式：在Cydia中安装FLEX，并进入FLEX设置中配置；\n\n02.非越狱，通过加入第三方库FLEX可实现功能，地址为：https://github.com/Flipboard/FLEX，也可以用Pod引入；\n<!--more-->","source":"_posts/2015-03-05-01.md","raw":"title: 用FLEX获取iOS设备视图层级\ndate: 2015-03-05 20:00:00\ntags: [Blog,iOS]\n---\n关于FLEX使用的截图如下：\n<div align=center>\n![flex](http://7xl2dx.com1.z0.glb.clouddn.com/fnozBlog_flex.jpg)\n</div>\n\n分为越狱和非越狱的使用方式：\n\n01.越狱方式：在Cydia中安装FLEX，并进入FLEX设置中配置；\n\n02.非越狱，通过加入第三方库FLEX可实现功能，地址为：https://github.com/Flipboard/FLEX，也可以用Pod引入；\n<!--more-->","slug":"2015-03-05-01","published":1,"updated":"2016-08-20T07:51:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis2xiuxi000wuwjgvjaa7gjj"},{"title":"Swift 写了一个 iOS 路由框架 FNUrlRoute","date":"2016-11-03T16:00:00.000Z","_content":"Swift 路由框架：iOS 基于页面、模块的路由框架，解耦神器。 \n\n开源在[这里](https://github.com/Fnoz/FNUrlRoute)。\n\n用 FNUrlRoute，可以用来解耦模块，使得模块之前的调用独立开来，举个简单的例子，你在 VC、Model 或者 Cell 中直接调用类似`Open(xxxPage)` 的方式直接打开一个页面（或者唤起一个模块），从而减少代码的冗余。\n\n另外还有一个神用途：比如Banner的跳转问题，只要跳转链接遵循规则，运营想跳什么页面，配对应的urlRoute链接就行了。\n\n如果这样说不够直观，直接上 Demo 来描述。\n\n<!--more-->\n\n### 简单的例子\n\n```\nFN.open(url: \"xxx://yyy/goodDetail?goodId=123\")\nFN.open(url: \"xxx://yyy/shopDetail?shopId=456\", modal:true, params:[\"shopId\": \"123\" as AnyObject])\nFN.open(url: \"http://www.baidu.com/shopDetail.html?shopId=123\")\nFN.open(url: \"xxx://yyy/login\")\nFN.open(url: \"http://www.weidian.com\")\n```\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=40% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_all.png\" alt=\"\"></div>\n\n点击对应 cell 分别执行上面的代码，效果如下：\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_00.gif\" alt=\"\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_01.gif\" alt=\"\"></div>\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_02.gif\" alt=\"\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_03.gif\" alt=\"\"></div>\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_04.gif\" alt=\"\"></div>\n\n### 为了用上 FNUrlRoute，你需要做的事\n1、引入代码，代码引用或者 pod 引用\n\n2、在`didFinishLaunch`中初始化，like this：\n\n```\nFNUrlRoute.initUrlRoute(dictionary: [\"yyy/goodDetail\": GoodDetailViewController.self,\n                                     \"yyy/shopDetail\": ShopDetailViewController.self,\n                                     \"www.baidu.com/shopDetail.html\": ShopDetailViewController.self,\n                                     \"yyy/login\": LoginModule.self])\n```\n\n3、你也可以另外新增和删除对应的模块，like this：\n\n```\nFNUrlRoute.register(key: \"yyy/login\", module: LoginModule.self)\nFNUrlRoute.remove(key: \"yyy/login\")\n```\n\n4、让你的模块（比如`ShopDetailViewController`），遵守`FNUrlRouteDelegate`协议，并实现`init(params: [String: AnyObject]?)`方法，同时你可以在这里拿到`FN.open(url:params:)`时传入的参数。\n\n5、在任意地方，调用`FN.open`以唤起你的模块，like this：\n\n```\nFN.open(url: \"xxx://yyy/goodDetail?goodId=123\")\n```\n\n### 需要了解的一些逻辑\n1、注册（初始化）时，对应的 `key` 为 `url` 的 `host` + `path`，比如`http://www.baidu.com/shopDetail.html?shopId=123`，`key`应该为`www.baidu.com/shopDetail.html`，`url`的`scheme`我是不 care 的，这个只是为了让你处理app间跳转方便，调用`open(url)`时没有`scheme`也是可以唤起的。\n\n2、如果有`navigationController`，并且`modal`为`false`，则`push`页面，否则`present`（`modal`形式弹出）\n\n3、url中如果有参数，最后会传到params中，如果有同key的key-value，以params中为准\n\n### 一些自问自答\n**问 1：初始化的时候，为什么不采用直接文件（比如 plist）读取呢？**\n\n**答：**常会有同学对模块进行改名，比如`ShopDetailViewController` -> `FNShopDetailViewController`，结果文件里忘记改了，结果就坑了。虽然这样麻烦点，但是在编译时就发现问题。\n\n**问 2：类似下面这种用法，怎么在对应模块里拿到params？**\n\n```\nFN.open(url: \"xxx://yyy/shopDetail?shopId=456\", modal:true, params:[\"shopId\": \"123\" as AnyObject])\n```\n\n**答：**模块遵守`FNUrlRouteDelegate`协议，并实现`init(params: [String: AnyObject]?)`方法，同时你可以在这里拿到`FN.open(url:params:)`时传入的参数。\n\n**问 3：如果 url 里面本身就有参数，会怎么样？**\n\n**答：**如果 url 里有query，会取出来，放到params中传入页面，这样做的好处是，你可以通过选择合适的key，使用`http://www.baidu.com/shopDetail.html?shopId=123`直接打开一个`ShopDetailViewController `。\n\n**问 4：如果 url 没有匹配到任意模块，会怎么样？**\n\n**答：**没有匹配到模块，默认是会用`SFSafariViewController`打开一个 web 页面，如果你想用另外的处理方式，重写一下`HandleOverBlock`就行了，like this：\n\n```\nFNUrlRoute.setHandleOverBlock { (url, modal, params) in\n\t//your handle          \n}\n```\n\n### 关于Pod引用\n```\npod 'FNUrlRoute', :git => 'git@github.com:Fnoz/FNUrlRoute.git', :tag => '1.0.0'\n```\n\n###TODO\n\n1、`url` 中如果含有需要 `urlEncode` 的，暂时还没处理\n\n2、用于切换`tabController`的参数","source":"_posts/2016-11-04-01.md","raw":"title: Swift 写了一个 iOS 路由框架 FNUrlRoute\ndate: 2016-11-04 00:00:00\ntags: [Project,iOS]\n---\nSwift 路由框架：iOS 基于页面、模块的路由框架，解耦神器。 \n\n开源在[这里](https://github.com/Fnoz/FNUrlRoute)。\n\n用 FNUrlRoute，可以用来解耦模块，使得模块之前的调用独立开来，举个简单的例子，你在 VC、Model 或者 Cell 中直接调用类似`Open(xxxPage)` 的方式直接打开一个页面（或者唤起一个模块），从而减少代码的冗余。\n\n另外还有一个神用途：比如Banner的跳转问题，只要跳转链接遵循规则，运营想跳什么页面，配对应的urlRoute链接就行了。\n\n如果这样说不够直观，直接上 Demo 来描述。\n\n<!--more-->\n\n### 简单的例子\n\n```\nFN.open(url: \"xxx://yyy/goodDetail?goodId=123\")\nFN.open(url: \"xxx://yyy/shopDetail?shopId=456\", modal:true, params:[\"shopId\": \"123\" as AnyObject])\nFN.open(url: \"http://www.baidu.com/shopDetail.html?shopId=123\")\nFN.open(url: \"xxx://yyy/login\")\nFN.open(url: \"http://www.weidian.com\")\n```\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=40% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_all.png\" alt=\"\"></div>\n\n点击对应 cell 分别执行上面的代码，效果如下：\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_00.gif\" alt=\"\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_01.gif\" alt=\"\"></div>\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_02.gif\" alt=\"\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_03.gif\" alt=\"\"></div>\n\n<div align=\"center\" display=\"inline\" float=\"left\"><img width=33% src=\"http://7xl2dx.com1.z0.glb.clouddn.com/fnur_04.gif\" alt=\"\"></div>\n\n### 为了用上 FNUrlRoute，你需要做的事\n1、引入代码，代码引用或者 pod 引用\n\n2、在`didFinishLaunch`中初始化，like this：\n\n```\nFNUrlRoute.initUrlRoute(dictionary: [\"yyy/goodDetail\": GoodDetailViewController.self,\n                                     \"yyy/shopDetail\": ShopDetailViewController.self,\n                                     \"www.baidu.com/shopDetail.html\": ShopDetailViewController.self,\n                                     \"yyy/login\": LoginModule.self])\n```\n\n3、你也可以另外新增和删除对应的模块，like this：\n\n```\nFNUrlRoute.register(key: \"yyy/login\", module: LoginModule.self)\nFNUrlRoute.remove(key: \"yyy/login\")\n```\n\n4、让你的模块（比如`ShopDetailViewController`），遵守`FNUrlRouteDelegate`协议，并实现`init(params: [String: AnyObject]?)`方法，同时你可以在这里拿到`FN.open(url:params:)`时传入的参数。\n\n5、在任意地方，调用`FN.open`以唤起你的模块，like this：\n\n```\nFN.open(url: \"xxx://yyy/goodDetail?goodId=123\")\n```\n\n### 需要了解的一些逻辑\n1、注册（初始化）时，对应的 `key` 为 `url` 的 `host` + `path`，比如`http://www.baidu.com/shopDetail.html?shopId=123`，`key`应该为`www.baidu.com/shopDetail.html`，`url`的`scheme`我是不 care 的，这个只是为了让你处理app间跳转方便，调用`open(url)`时没有`scheme`也是可以唤起的。\n\n2、如果有`navigationController`，并且`modal`为`false`，则`push`页面，否则`present`（`modal`形式弹出）\n\n3、url中如果有参数，最后会传到params中，如果有同key的key-value，以params中为准\n\n### 一些自问自答\n**问 1：初始化的时候，为什么不采用直接文件（比如 plist）读取呢？**\n\n**答：**常会有同学对模块进行改名，比如`ShopDetailViewController` -> `FNShopDetailViewController`，结果文件里忘记改了，结果就坑了。虽然这样麻烦点，但是在编译时就发现问题。\n\n**问 2：类似下面这种用法，怎么在对应模块里拿到params？**\n\n```\nFN.open(url: \"xxx://yyy/shopDetail?shopId=456\", modal:true, params:[\"shopId\": \"123\" as AnyObject])\n```\n\n**答：**模块遵守`FNUrlRouteDelegate`协议，并实现`init(params: [String: AnyObject]?)`方法，同时你可以在这里拿到`FN.open(url:params:)`时传入的参数。\n\n**问 3：如果 url 里面本身就有参数，会怎么样？**\n\n**答：**如果 url 里有query，会取出来，放到params中传入页面，这样做的好处是，你可以通过选择合适的key，使用`http://www.baidu.com/shopDetail.html?shopId=123`直接打开一个`ShopDetailViewController `。\n\n**问 4：如果 url 没有匹配到任意模块，会怎么样？**\n\n**答：**没有匹配到模块，默认是会用`SFSafariViewController`打开一个 web 页面，如果你想用另外的处理方式，重写一下`HandleOverBlock`就行了，like this：\n\n```\nFNUrlRoute.setHandleOverBlock { (url, modal, params) in\n\t//your handle          \n}\n```\n\n### 关于Pod引用\n```\npod 'FNUrlRoute', :git => 'git@github.com:Fnoz/FNUrlRoute.git', :tag => '1.0.0'\n```\n\n###TODO\n\n1、`url` 中如果含有需要 `urlEncode` 的，暂时还没处理\n\n2、用于切换`tabController`的参数","slug":"2016-11-04-01","published":1,"updated":"2016-11-06T09:10:32.000Z","_id":"civ6dxbh90000d5jdvf27ez1k","comments":1,"layout":"post","photos":[],"link":""},{"title":"写了图床 App Picly","date":"2017-01-17T16:00:00.000Z","_content":"Mac 上有 iPic 这类图床 App，现在很多人写文章都用手机了，所以我写了一个 iOS 图床 App Picly。\n\n为了方便，上传服务基于七牛，App 下载地址在[这里](https://itunes.apple.com/us/app/picly-mei-hao-de-tu-chuang/id1192997043?mt=8)\n\n![](http://7xl2dx.com1.z0.glb.clouddn.com/fnozblog_picly_preview.png)\n\n<!--more-->","source":"_posts/2017-01-18-01.md","raw":"title: 写了图床 App Picly\ndate: 2017-01-18 00:00:00\ntags: [Project,iOS]\n---\nMac 上有 iPic 这类图床 App，现在很多人写文章都用手机了，所以我写了一个 iOS 图床 App Picly。\n\n为了方便，上传服务基于七牛，App 下载地址在[这里](https://itunes.apple.com/us/app/picly-mei-hao-de-tu-chuang/id1192997043?mt=8)\n\n![](http://7xl2dx.com1.z0.glb.clouddn.com/fnozblog_picly_preview.png)\n\n<!--more-->","slug":"2017-01-18-01","published":1,"updated":"2017-02-09T04:17:19.000Z","_id":"ciyxv9byf0000htjes1rve642","comments":1,"layout":"post","photos":[],"link":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cis2xiuvz0000uwjgdkzljql3","tag_id":"ciqp0ll010000zumfmx3sl8m4","_id":"cis2xiuw30001uwjgsxt25fsa"},{"post_id":"cis2xiuvz0000uwjgdkzljql3","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuw40002uwjgkw1wfmzl"},{"post_id":"cis2xiuwk0003uwjgzxhifjfu","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiuwm0005uwjggra3vool"},{"post_id":"cis2xiuwk0003uwjgzxhifjfu","tag_id":"cis2xiuwl0004uwjgxceraagy","_id":"cis2xiuwm0006uwjgyv312vpi"},{"post_id":"cis2xiuwv0007uwjgf7bbr1mo","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiuww0008uwjgqbrc4dd0"},{"post_id":"cis2xiuwv0007uwjgf7bbr1mo","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuww0009uwjgszof8oz8"},{"post_id":"cis2xiuwx000auwjgw2iu2z51","tag_id":"ciqp0ll010000zumfmx3sl8m4","_id":"cis2xiuwy000buwjgmxt5ff33"},{"post_id":"cis2xiuwx000auwjgw2iu2z51","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuwy000cuwjghfre3qiq"},{"post_id":"cis2xiux0000duwjgp0lyy20t","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiux4000euwjgfp7ylutn"},{"post_id":"cis2xiux0000duwjgp0lyy20t","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiux4000fuwjgyqpndtfr"},{"post_id":"cis2xiux5000guwjgsyc4crlv","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiux6000huwjgdaqx58lt"},{"post_id":"cis2xiux5000guwjgsyc4crlv","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiux6000iuwjg8uxams6h"},{"post_id":"cis2xiux8000juwjg0brkspzc","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiux9000luwjg4rtwxf3h"},{"post_id":"cis2xiux8000juwjg0brkspzc","tag_id":"cis2xiux8000kuwjgl42otf47","_id":"cis2xiux9000muwjg4ernnn4n"},{"post_id":"cis2xiuxa000nuwjgc0sc8r2y","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"cis2xiuxc000ouwjgld9e1bqi"},{"post_id":"cis2xiuxa000nuwjgc0sc8r2y","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuxc000puwjgytu4a1kd"},{"post_id":"cis2xiuxd000quwjg083d47ay","tag_id":"ciqp0ll010000zumfmx3sl8m4","_id":"cis2xiuxe000ruwjga6trxpb8"},{"post_id":"cis2xiuxd000quwjg083d47ay","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuxe000suwjg1cong2pm"},{"post_id":"cis2xiuxf000tuwjgif5w7btq","tag_id":"ciqp0ll010000zumfmx3sl8m4","_id":"cis2xiuxf000uuwjgxjh3rg0q"},{"post_id":"cis2xiuxf000tuwjgif5w7btq","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuxg000vuwjguus9qxvt"},{"post_id":"cis2xiuxi000wuwjgvjaa7gjj","tag_id":"ciqp0ll010000zumfmx3sl8m4","_id":"cis2xiuxj000xuwjge5s8kug2"},{"post_id":"cis2xiuxi000wuwjgvjaa7gjj","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"cis2xiuxj000yuwjgx0q4jihi"},{"post_id":"civ6dxbh90000d5jdvf27ez1k","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"civ6dxbhi0001d5jdf9e44dd1"},{"post_id":"civ6dxbh90000d5jdvf27ez1k","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"civ6f6a0t0000tojdaf46ujqq"},{"post_id":"ciyxv9byf0000htjes1rve642","tag_id":"ciqp7f7ma0000ckmfupgkh3v3","_id":"ciyxv9byl0001htjeh8610xdx"},{"post_id":"ciyxv9byf0000htjes1rve642","tag_id":"ciqp0ll0a0003zumfsnridx0i","_id":"ciyxv9byl0002htjesdd9p95p"}],"Tag":[{"name":"博客技术","_id":"ciqoqi2nv0001whmfeqrhddyy"},{"name":"iOS开发","_id":"ciqoqi2o70006whmfbfnk563b"},{"name":"开发工具","_id":"ciqoqi2ob000bwhmfri58pjjb"},{"name":"Blog","_id":"ciqp0ll010000zumfmx3sl8m4"},{"name":"iOS","_id":"ciqp0ll0a0003zumfsnridx0i"},{"name":"Project","_id":"ciqp7f7ma0000ckmfupgkh3v3"},{"name":"Mac","_id":"cis2xiuwl0004uwjgxceraagy"},{"name":"Web","_id":"cis2xiux8000kuwjgl42otf47"}]}}